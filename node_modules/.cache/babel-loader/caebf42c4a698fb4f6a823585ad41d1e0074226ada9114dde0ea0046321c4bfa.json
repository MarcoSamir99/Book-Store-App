{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prog courses\\\\New folder\\\\React\\\\1\\\\books\\\\src\\\\context\\\\books.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BooksContext = /*#__PURE__*/createContext();\nfunction Provider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [books, setBooks] = useState([]);\n  const fetchBooks = async () => {\n    const response = await axios.get('http://localhost:3001/books');\n    setBooks(response.data);\n  };\n  const editBookById = async (id, newTitle) => {\n    const response = await axios.put(`http://localhost:3001/books/${id}`, {\n      title: newTitle\n    });\n    const updatedBooks = books.map(book => {\n      if (book.id === id) {\n        return {\n          ...book,\n          ...response.data\n        }; //...response.data made to get the most updated version of the book\n      }\n\n      return book;\n    });\n    setBooks(updatedBooks);\n  };\n  const deleteBookById = async id => {\n    const response = await axios.delete(`http://localhost:3001/books/${id}`);\n    const updatedBooks = books.filter(book => {\n      return book.id !== id;\n    });\n    setBooks(updatedBooks);\n  };\n  const createBook = async title => {\n    const response = await axios.post('http://localhost:3001/books', {\n      title\n    });\n    const updatedBooks = [...books, response.data];\n    setBooks(updatedBooks);\n  };\n  const valueToShare = {};\n  return /*#__PURE__*/_jsxDEV(BooksContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n}\n_s(Provider, \"/iW9mSwgc4d+8Agrl++FSS1ccl8=\");\n_c = Provider;\nexport { Provider };\nexport default BooksContext;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["createContext","useState","axios","jsxDEV","_jsxDEV","BooksContext","Provider","_ref","_s","children","books","setBooks","fetchBooks","response","get","data","editBookById","id","newTitle","put","title","updatedBooks","map","book","deleteBookById","delete","filter","createBook","post","valueToShare","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Prog courses/New folder/React/1/books/src/context/books.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BooksContext = createContext();\r\n\r\nfunction Provider({ children }) {\r\n    const [books, setBooks] = useState([]);\r\n\r\n    const fetchBooks = async () => {\r\n        const response = await axios.get('http://localhost:3001/books');\r\n\r\n        setBooks(response.data);\r\n    };\r\n\r\n    const editBookById = async (id, newTitle) => {        \r\n        const response = await axios.put(`http://localhost:3001/books/${id}`, {\r\n            title: newTitle\r\n        });\r\n\r\n\r\n        const updatedBooks = books.map((book) => {\r\n            if (book.id === id ) {\r\n                return {...book, ...response.data} ; //...response.data made to get the most updated version of the book\r\n            }\r\n\r\n            return book;\r\n        });\r\n\r\n        setBooks(updatedBooks);\r\n    };\r\n\r\n    const deleteBookById = async (id) => {\r\n        const response = await axios.delete(`http://localhost:3001/books/${id}`)\r\n\r\n        const updatedBooks = books.filter((book) => {\r\n            return book.id !== id;\r\n        })\r\n\r\n        setBooks(updatedBooks);\r\n    };\r\n\r\n\r\n    const createBook = async (title) => {\r\n        const response = await axios.post('http://localhost:3001/books', {\r\n            title\r\n        });\r\n\r\n        const updatedBooks = [\r\n            ...books,\r\n            response.data\r\n        ];\r\n \r\n        setBooks(updatedBooks);\r\n    };\r\n  \r\n\r\n    const valueToShare = {\r\n        \r\n    }\r\n\r\n    return <BooksContext.Provider value={{}}>\r\n        {children}\r\n    </BooksContext.Provider>\r\n}\r\n\r\nexport { Provider };\r\nexport default BooksContext;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,gBAAGL,aAAa,EAAE;AAEpC,SAASM,QAAQA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,6BAA6B,CAAC;IAE/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,QAAQ,KAAK;IACzC,MAAML,QAAQ,GAAG,MAAMX,KAAK,CAACiB,GAAG,CAAE,+BAA8BF,EAAG,EAAC,EAAE;MAClEG,KAAK,EAAEF;IACX,CAAC,CAAC;IAGF,MAAMG,YAAY,GAAGX,KAAK,CAACY,GAAG,CAAEC,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACN,EAAE,KAAKA,EAAE,EAAG;QACjB,OAAO;UAAC,GAAGM,IAAI;UAAE,GAAGV,QAAQ,CAACE;QAAI,CAAC,CAAE,CAAC;MACzC;;MAEA,OAAOQ,IAAI;IACf,CAAC,CAAC;IAEFZ,QAAQ,CAACU,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMG,cAAc,GAAG,MAAOP,EAAE,IAAK;IACjC,MAAMJ,QAAQ,GAAG,MAAMX,KAAK,CAACuB,MAAM,CAAE,+BAA8BR,EAAG,EAAC,CAAC;IAExE,MAAMI,YAAY,GAAGX,KAAK,CAACgB,MAAM,CAAEH,IAAI,IAAK;MACxC,OAAOA,IAAI,CAACN,EAAE,KAAKA,EAAE;IACzB,CAAC,CAAC;IAEFN,QAAQ,CAACU,YAAY,CAAC;EAC1B,CAAC;EAGD,MAAMM,UAAU,GAAG,MAAOP,KAAK,IAAK;IAChC,MAAMP,QAAQ,GAAG,MAAMX,KAAK,CAAC0B,IAAI,CAAC,6BAA6B,EAAE;MAC7DR;IACJ,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAG,CACjB,GAAGX,KAAK,EACRG,QAAQ,CAACE,IAAI,CAChB;IAEDJ,QAAQ,CAACU,YAAY,CAAC;EAC1B,CAAC;EAGD,MAAMQ,YAAY,GAAG,CAErB,CAAC;EAED,oBAAOzB,OAAA,CAACC,YAAY,CAACC,QAAQ;IAACwB,KAAK,EAAE,CAAC,CAAE;IAAArB,QAAA,EACnCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACW;AAC5B;AAAC1B,EAAA,CA1DQF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA4DjB,SAASA,QAAQ;AACjB,eAAeD,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}